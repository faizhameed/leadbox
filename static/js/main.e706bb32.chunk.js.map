{"version":3,"sources":["images/noun_Download_2120379.svg","images/Mask Group 3.svg","components/navbar/Navbar.jsx","components/searchBox/SearchBox.js","components/dataTable/modal/modal.component.js","components/dataTable/dataTable.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","id","SearchBox","outclick","_useState","useState","_useState2","Object","slicedToArray","chipValue","setChipValue","_useState3","_useState4","listOptions","setlistOptions","originalList","_useState5","_useState6","activateInput","setActivateInput","handleDeleteChip","item","filterChipIndex","split","forEach","element","i","addList","slice","join","toConsumableArray","filter","keyOfChipValues","map","key","filtered","e","this","indexOf","el","document","getElementById","remove","editChipValue","console","log","addValue","length","useEffect","flag","popup","popupHelp","popupHelp2","button","getElementsByTagName","onclick","target","style","display","d1","insertAdjacentHTML","d2","value","select","focus","liStyle","paddingLeft","paddingRight","backgroundColor","margin","color","marginLeft","border","className","src","backArrow","alt","autoComplete","onClick","classList","onKeyDown","event","keyCode","val","includes","alert","concat","placeholder","listStyleType","fontSize","position","top","left","padding","dwnbtn","ref","val1","filteredOptions","handleInputValue2","handleItemOptions","UserModal","props","data","width","height","name","fontWeight","address","street","suite","city","handleModal","DataT","setuseModal","setdata","clickData","setclickData","useModal","_fetchUrl","asyncToGenerator","regenerator_default","mark","_callee","response","json","wrap","_context","prev","next","fetch","sent","stop","apply","arguments","fetchUrl","transition","modal_component","Table","striped","bordered","size","cursor","username","email","App","navbar_Navbar","searchBox_SearchBox","dataTable_component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e706bb32.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noun_Download_2120379.19bd94ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/Mask Group 3.d7189b57.svg\";","import React from 'react';\nimport './Navbar.css'\n\n\n\nfunction Navbar() {\n    \n    return (\n\n       <div>\n              <ul id=\"nav\">\n                {/* <li><a href=\"./\">link</a></li>\n                <li><a href=\"./\">link</a></li>\n                <li><a href=\"./\">link</a></li>\n                <li><a href=\"./\">link</a></li> */}\n              </ul>\n            </div>\n  \n    )\n}\n\nexport default Navbar\n","import React, {useState,useEffect} from 'react'\nimport \"./SearchBox.css\";\nimport dwnbtn from \"../../images/noun_Download_2120379.svg\"\nimport backArrow from \"/home/faiz/Documents/Corefactors/leadbox/src/images/Mask Group 3.svg\"\n/* import tickMark from \"../../images/tick.svg\" */\n\nfunction SearchBox() {\n    const [chipValue,setChipValue] = useState([]);\n    /* const [savedBy,setSavedBy]=useState([\"By Shobana\",\"Vimal's Lead\", \"Akshay Dec\"]); */\n    const [listOptions, setlistOptions]=useState([\"First Name\",\"Last Name\", \"Address\",\"Lead Type\",\"Phone\",\"Email ID\"]);\n    const originalList = [\"First Name\",\"Last Name\", \"Address\",\"Lead Type\",\"Phone\",\"Email ID\"];\n    const [activateInput,setActivateInput]=useState([false]);\n   \n    \n    \n    /* Setting chip values based on the input for the keys in the options list */\n    \n    const handleInputValue1=(event)=>{\n        if(event.keyCode === 13)\n        { const val = document.getElementById(\"searchInput\");\n        if(val.value!==\"\" && chipValue.length<=4){\n            if(!chipValue.includes(val.value))\n            setChipValue([...chipValue,val.value]);\n            else alert(\"Item already added\");\n            val.value= \"\";}\n        }\n    }\n    \n    /* function inside the list div where user inputs value to the key given in list */\n    const handleInputValue2=(event,item)=>{\n        if(event.keyCode === 13)\n        {\n            let val1 = document.getElementById(\"input2\");\n            if(val1.value!==\"\" && val1!==null)\n            {\n                const val = `${item} : ${val1.value}`\n                val1.value = \"\";\n                setChipValue([...chipValue,val]);\n                const filteredOptions = listOptions.filter(key=>key!==item);\n                setlistOptions([...filteredOptions]);\n            }\n            /* var element = document.getElementById(\"searchoptions\");\n            element.classList.add(\"hide\"); */\n        }\n    }\n    \n\n    const handleHide = ()=>{\n        var element = document.getElementById(\"searchoptions\");\n        element.classList.remove(\"hide\");\n    }\n    \n    let outclick; // outclick variable to close the options list when clicking outside\n    \n\n\n    const handleItemOptions=(item)=>{\n        var el = document.getElementById('input2');\n        if(el)\n        el.remove();  // remove input for previously clicked element\n        /* This Button removed until further notice */\n        /* el = document.getElementsByClassName('input2btn');\n        if(el)\n        { \n        console.log(el.length);\n        for(let i=0;i<el.length;i++)\n        {\n        el[i].classList.add(\"hide\");  \n            }} */\n/* Selecting the key from the options list for adding the input tag */\n        var d1 = document.getElementById(item);\n        d1.insertAdjacentHTML('beforeend', '<input id=\"input2\" />');\n        /* This Button removed until further notice */\n        /*  var element = document.getElementById(item+1);\n        if(element!==null)\n        element.classList.remove(\"hide\"); */\n      }\n\n\n/* input in list button removed until further notice and its function */\n      /* const handleOptionValue =()=>{\n        \n       var input2 =  document.getElementById(\"input2\")\n       if(input2)\n       if(input2.value!==\"\")\n        console.log(input2.value);\n      } */\n    \n    const handleDeleteChip = (item) =>{\n        /*  const chip = [...chipValue.filter(i=>i!==item)]; */\n        let filterChipIndex;\n        item.split(\"\").forEach((element,i)=>{\n            if (element === \":\"){\n                filterChipIndex =  i;\n            }\n        })\n       let addList= item.split(\"\").slice(0,filterChipIndex-1).join(\"\");\n\n   \n         setChipValue([...chipValue.filter(i=>i!==item)]);\n\n        let keyOfChipValues = [...chipValue.map(item=>{\n            item.split(\"\").forEach((element,i)=>{\n                if (element === \":\"){\n                    filterChipIndex =  i;\n                }\n            })\n            return item.split(\"\").slice(0,filterChipIndex-1).join(\"\")\n        })];\n\n        keyOfChipValues = keyOfChipValues.filter(key=>key!==addList);\n         var filtered = originalList.filter(\n            function(e) {\n              return this.indexOf(e) < 0;\n            },\n            keyOfChipValues\n        );\n      /*   console.log(\"filtered\",filtered); */\n     \n      setlistOptions([...filtered]);\n      var el = document.getElementById('input2');\n      if(el)\n      el.remove();\n     \n    }\n\n   /* Edit the chip value on Click */\n   const editChipValue = (item) =>{\n            /*  const chip = [...chipValue.filter(i=>i!==item)]; */\n            console.log(\"from item\",item)\n            let filterChipIndex;\n            item.split(\"\").forEach((element,i)=>{\n                if (element === \":\"){\n                    filterChipIndex =  i;\n                }\n            })\n           let addList= item.split(\"\").slice(0,filterChipIndex-1).join(\"\");\n        \n           let addValue= item.split(\"\").slice(filterChipIndex+2,item.length).join(\"\");\n       \n             setChipValue([...chipValue.filter(i=>i!==item)]);\n    \n            let keyOfChipValues = [...chipValue.map(item=>{\n                item.split(\"\").forEach((element,i)=>{\n                    if (element === \":\"){\n                        filterChipIndex =  i;\n                    }\n                })\n                return item.split(\"\").slice(0,filterChipIndex-1).join(\"\")\n            })];\n    \n            keyOfChipValues = keyOfChipValues.filter(key=>key!==addList);\n             var filtered = originalList.filter(\n                function(e) {\n                  return this.indexOf(e) < 0;\n                },\n                keyOfChipValues\n            );\n          /*   console.log(\"filtered\",filtered); */\n         \n          setlistOptions([...filtered]);\n          var el = document.getElementById('input2');\n          if(el)\n          el.remove();\n          setActivateInput([true,addList,addValue]);\n   }\n\n    useEffect(() => {\n        // Update the document title using the browser API\n\n/* New Testing */\n            let flag =1;     \n            var popup = document.getElementById('searchoptions');\n            var popupHelp =document.getElementById('searchInput');\n            var popupHelp2 = document.getElementById(\"searchWrapper\");\n            var button = document.getElementsByTagName(\"button\");\n            document.onclick = function(e){\n           \n                if(e.target.id === 'SearchBoxContainer'|| e.target === button){\n   \n                    popup.style.display = 'none';\n                   \n                }\n                if(e.target === popup || e.target=== popupHelp||e.target===popupHelp2){\n                     popup.style.display = 'inline-block';\n                  \n                }\n                if(e.target=== popupHelp||e.target===popupHelp2){\n                    if(flag ===0){\n                    flag=1;\n                    popup.style.display = 'none';\n                }else{\n                    flag=0;\n                    popup.style.display = 'inline-block';\n                   \n                }\n\n                }\n               \n            };\n        \n/* End of Testing */\n\n/* Commented until new test passed or failed */\n        /* const handleOutClick = (e)=>{\n             console.log(\"e.target cval\",e.target);\n             if(outclick!==null)\n             if(!outclick && !outclick.contains(e.target)){\n                 var element = document.getElementById(\"searchoptions\");\n                 element.classList.add(\"hide\");}\n             }\n        document.addEventListener('mousedown',handleOutClick,false); */\n        if(activateInput[0]){\n            console.log(\"array of input\",activateInput[2]);\n            var d1 = document.getElementById(activateInput[1]);\n            if(d1!==null)\n            d1.insertAdjacentHTML('beforeend', '<input id=\"input2\" />');\n            var d2 = document.getElementById(\"input2\");\n            if(d2)\n            {\n            d2.value = activateInput[2];\n            d2.select();\n            d2.focus();\n        }\n            setActivateInput([false])\n        }\n\n    },[outclick,activateInput]);\n\n    const chipstyle = {\n        listStyleType: 'none',\n        fontSize:'.8em',\n        position:'absolute',\n        top: '70.5%',\n        left:' 29.5%',\n        margin:'0',\n        padding:'0',\n        display:'flex',\n        \n    }\n    const liStyle = {\n        display:'flex',\n        paddingLeft:'1px',\n        paddingRight:'1px',\n        backgroundColor:'white',/* \n        borderRadius:'8px', */\n        margin:'1px',\n        color:' #262c5b',\n        marginLeft: '7px',\n        border: '1px solid #262c5b'\n    }\n\n\n\n    return (\n        <div id = \"SearchBoxContainer\" className=\"SearchBoxContainer\">\n            <button className = \"back\"><img src ={backArrow} alt = \"\"/>  Back</button>\n            <div id=\"searchWrapper\" className = \"SearchBoxWrapper select\">    \n            <input autoComplete=\"off\" onClick = {handleHide} onKeyDown={handleInputValue1} \n            id = \"searchInput\" placeholder=\"Filter (Type something…..)\" className=\"search\"/>\n            </div>\n           \n            <div className=\"select2\">\n            <select className=\"btn2\">  \n                    <option>All Leads</option>\n                    <option>My Leads</option>\n                    <option>Hot Leads</option>\n                </select>\n            </div>\n            <button className = \"btn\">Search</button>\n            <ul style = {chipstyle}>\n            {chipValue.map((item,i) =>\n             <li key = {i+item}\n             style = {liStyle}><p  onClick={() => editChipValue(item)} >{item}</p>\n             <button className=\"btn1\" onClick={() => handleDeleteChip(item)}>X</button>\n             </li>)}\n            </ul> \n            <button className = \"nlbtn\">New Lead +</button>\n            <button className = \"imbtn\">Import</button>\n            <button className = \"dwnbtn\"><img src ={dwnbtn} alt = \"Download\"/></button>\n\n            {/* List box appears only when clicking the input area */} \n            <div ref={el=>outclick=el} id =\"searchoptions\" className=\"searchoptions hide\">\n            <div className = \"SavedBy\">\n            <p style = {{color:'grey'}}>Recent:</p>\n           {/*  {savedBy.map((item,i) =><p className=\"SavedByValues\" key = {i+item}>{item}</p>)} */}\n            </div>\n                <div className = \"chipDisplayDiv\">\n\n                <ul className = \"chipstyle\">\n            {chipValue.map((item,i) =>\n             <li className= \"chipliststyle\"  key = {i+item}>\n             <p onClick={() => editChipValue(item)} >{item}</p> \n             <button className=\"btn1\" onClick={() => handleDeleteChip(item)}>X</button>\n             </li>)}\n            </ul>   \n\n                </div>\n            <ul id = \"popup\" style = {{listStyleType:\"none\",display:\"inline-block\"}}>\n            {\n            listOptions.map((item)=><li onKeyDown={(e)=>handleInputValue2(e,item)} id ={item} className = \"listOptions\" key={item} >\n                <p onClick={() => handleItemOptions(item)}>{item}</p>\n                {/*  list input Button removed until further nortice */}\n               {/*  <button id = {item+1} className = \"input2btn hide\" onClick ={handleOptionValue}><img className = \"tickMark\"src={tickMark} alt =\"ok\"/></button> */}\n                </li>)\n            }\n            </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default SearchBox\n","import React from 'react'\n\nfunction UserModal(props) {\n    console.log(\"modal\",props.data)\n    return (\n        <div style = {{width:\"30%\",height:\"auto\",border:\"1px solid blue\"}}>\n        \n        <div> \n        <h3>{props.data.name}  \n        </h3>\n        <p style = {{fontWeight:\"bolder\"}}>Address</p>\n        <p>{props.data.address.street}  \n        </p>\n        <p>{props.data.address.suite}  \n        </p>\n        <p>{props.data.address.city}  \n        </p>\n        </div>\n          <button className=\"btn3\" onClick = {()=>props.handleModal(false)}>close</button> \n        </div>\n    )\n}\n\nexport default UserModal\n","import React, { useState,useEffect} from 'react';\n\nimport {Table} from 'react-bootstrap';\nimport UserModal from './modal/modal.component';\nimport \"./table.css\";\n\nfunction DataT() {\n\n\n  \n    \n    \n    const handleDataClick=(data)=>{\n        setclickData(data);\n        handleModal(true)\n        console.log(\"function clicked\",data)\n\n        }\n        const handleModal=(val)=>{\n           setuseModal(val);\n    \n            }\n\n    \nconst [data, setdata] = useState([]);\nconst [clickData, setclickData] = useState([]);\nconst [useModal, setuseModal] = useState(false);\n\nasync function fetchUrl(){\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n    const json = await response.json();\n    console.log(json);\n    setdata(json);\n}\n\n        useEffect(() => {\n            fetchUrl();\n        },[])\n        \n    return (\n        <div style = {{display:\"flex\",transition:\"0.5s\"}}>\n  {useModal?<UserModal handleModal= {handleModal} data = {clickData}/>:null}\n\n\n      \n        <Table style={{transition:\"0.5s\" }} striped bordered size=\"sm\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>First</th>\n            <th>Last</th>\n            <th>Handle</th>\n          </tr>\n        </thead>\n        <tbody>\n         {data.map((item,i)=>{\n           return(<tr key ={i}>\n            <td key={i+\"i\"}>{item.id}</td>\n            <td key={i+\"ii\"} style={{cursor:\"pointer\"}} onClick = {()=>handleDataClick(item)}>{item.name}</td>\n            <td key={i+\"iii\"}>{item.username}</td>\n            <td key={i +\"iv\"}>{item.email}</td>\n            </tr> )    \n         }) }\n          \n        </tbody>\n      </Table>\n      \n        </div>\n    )\n}\n\nexport default DataT\n","import React from 'react';\nimport './App.css';\nimport Navbar from './components/navbar/Navbar';\nimport SearchBox from './components/searchBox/SearchBox';\nimport DataT from './components/dataTable/dataTable.component.jsx';\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n    <div>\n    <Navbar/>\n    </div>\n    <SearchBox/>\n    <DataT/>\n     <footer>\n      <p>Under Construction</p>\n     </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n<App />\n\n\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}