{"version":3,"sources":["components/navbar/Navbar.jsx","components/searchBox/SearchBox.js","components/dataTable/modal/modal.component.js","components/dataTable/dataTable.component.jsx","App.js","serviceWorker.js","index.js","images/noun_Download_2120379.svg","images/Mask Group 3.svg"],"names":["Navbar","react_default","a","createElement","id","SearchBox","outclick","rangeSelection","startDate","Date","endDate","key","disabled","showDateDisplay","_useState","useState","_useState2","Object","slicedToArray","chipValue","setChipValue","_useState3","_useState4","listOptions","setlistOptions","originalList","_useState5","_useState6","activateInput","setActivateInput","_useState7","_useState8","dateChip","setDateChip","_useState9","_useState10","selectionRange","setselectionRange","_useState11","_useState12","dateflag","setdateflag","handleDeleteChip","item","filterChipIndex","split","forEach","element","i","addList","slice","join","console","log","toConsumableArray","filter","keyOfChipValues","map","filtered","e","this","indexOf","el","document","getElementById","remove","addedclass","getElementsByClassName","length","classList","add","leadDiv","d1","style","display","editChipValue","addValue","popup","flaglead","useEffect","flag","popupHelp","popupHelp2","button","getElementsByTagName","onclick","target","insertAdjacentHTML","d2","value","select","focus","dateDiv","liStyle","paddingLeft","paddingRight","backgroundColor","margin","color","marginLeft","border","className","src","backArrow","alt","autoComplete","onClick","onKeyDown","event","keyCode","val","includes","alert","concat","placeholder","listStyleType","fontSize","position","top","left","padding","width","flexWrap","dwnbtn","ref","modules","name","height","overflow","marginBottom","overflowX","val1","filteredOptions","handleInputValue2","handleItemOptions","dist","ranges","onChange","selection","toString","splice","dateRange","selectionRangeNew","react_select_browser_esm","label","options","UserModal","props","data","fontWeight","address","street","suite","city","handleModal","DataT","setuseModal","setdata","clickData","setclickData","useModal","_fetchUrl","asyncToGenerator","regenerator_default","mark","_callee","response","json","wrap","_context","prev","next","fetch","sent","stop","apply","arguments","fetchUrl","transition","modal_component","Table","striped","bordered","size","cursor","username","email","App","navbar_Navbar","searchBox_SearchBox","dataTable_component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.95b1980b.chunk.js","sourcesContent":["import React from 'react';\nimport './Navbar.css'\n\n\n\nfunction Navbar() {\n    \n    return (\n\n       <div>\n              <ul id=\"nav\">\n                {/* <li><a href=\"./\">link</a></li>\n                <li><a href=\"./\">link</a></li>\n                <li><a href=\"./\">link</a></li>\n                <li><a href=\"./\">link</a></li> */}\n              </ul>\n            </div>\n  \n    )\n}\n\nexport default Navbar\n","import React, {useState,useEffect} from 'react'\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport \"./SearchBox.css\";\nimport dwnbtn from \"../../images/noun_Download_2120379.svg\"\nimport backArrow from \"/home/faiz/Documents/Corefactors/leadbox/src/images/Mask Group 3.svg\"\nimport { DateRangePicker } from 'react-date-range';\nimport {Element} from 'react-scroll';\nimport Select from 'react-select';\n\nfunction SearchBox() {\n    const rangeSelection = {\n        startDate: new Date(),\n        endDate: new Date(),\n        key: 'selection',\n        disabled: false,\n        showDateDisplay: true,\n    }\n    const options = [\n        { value: 'hot', label: 'Hot' },\n        { value: 'cold', label: 'Cold' },\n        { value: 'new', label: 'New' }\n      ]\n    const [chipValue,setChipValue] = useState([]);\n    const [listOptions, setlistOptions]=useState([\"First Name\",\"Last Name\", \"Address\",\"Phone\",\"Email ID\"]);\n    const originalList = [\"First Name\",\"Last Name\", \"Address\",\"Phone\",\"Email ID\"];\n    /* const [leadType,setleadType] = useState(options); */\n    const [activateInput,setActivateInput]=useState([false]);\n    const [dateChip, setDateChip] = useState([]);\n    const [selectionRange, setselectionRange] = useState(rangeSelection);\n    const [dateflag, setdateflag] = useState(false);\n    \n\n\n\n\n\n    /* Setting chip values based on the input for the keys in the options list */\n    const handleInputValue1=(event)=>{\n        if(event.keyCode === 13)\n        { const val = document.getElementById(\"searchInput\");\n        if(val.value!==\"\" && chipValue.length<=4){\n            if(!chipValue.includes(val.value))\n            setChipValue([...chipValue,val.value]);\n            else alert(\"Item already added\");\n            val.value= \"\";}\n        }\n    }\n    \n    /* function inside the list div where user inputs value to the key given in list */\n    const handleInputValue2=(event,item)=>{\n        if(event.keyCode === 13)\n        {\n            let val1 = document.getElementById(\"input2\");\n            if(val1.value!==\"\" && val1!==null)\n            {\n                const val = `${item} : ${val1.value}`\n                val1.value = \"\";\n                setChipValue([...chipValue,val]);\n                const filteredOptions = listOptions.filter(key=>key!==item);\n                setlistOptions([...filteredOptions]);\n            }\n            \n        }\n    }\n    \n\n    const handleHide = ()=>{\n        var element = document.getElementById(\"searchoptions\");\n        element.classList.remove(\"hide\");\n    }\n    \n    let outclick; // outclick variable to close the options list when clicking outside\n    \n\n\n    const handleItemOptions=(item)=>{\n        var el = document.getElementById('input2');\n        if(el)\n        el.remove(); \n        var addedclass =document.getElementsByClassName(\"addlistOptions\");\n        if(addedclass.length>=1){\n                for(let i = 0;i<addedclass.length;i++){\n                    addedclass[i].classList.add(\"listOptions\");\n                    addedclass[i].classList.remove(\"addlistOptions\");\n                }\n\n        }\n\n        var d2 = document.getElementById(\"listTypeOpt\");\n        if(d2){\n            d2.style.display=\"none\";  \n        }\n       \n       \n        var d1 = document.getElementById(item);\n        d1.insertAdjacentHTML('beforeend', '<input autocomplete=\"off\" id=\"input2\" />');\n        d1.classList.remove(\"listOptions\");\n       d1.classList.add(\"addlistOptions\");\n        \n       setdateflag(false);\n      }\n\n\n\n    \n    const handleDeleteChip = (item) =>{\n        /*  const chip = [...chipValue.filter(i=>i!==item)]; */\n        \n     \n           \n           let filterChipIndex;\n           item.split(\"\").forEach((element,i)=>{\n               if (element === \":\"){\n                   filterChipIndex =  i;\n               }\n           })\n          let addList= item.split(\"\").slice(0,filterChipIndex-1).join(\"\");\n          console.log(addList);\n            setChipValue([...chipValue.filter(i=>i!==item)]);/* Chips set to new state */\n           let keyOfChipValues = [...chipValue.map(item=>{\n               item.split(\"\").forEach((element,i)=>{\n                   if (element === \":\"){\n                       filterChipIndex =  i;\n                   }\n               })\n               return item.split(\"\").slice(0,filterChipIndex-1).join(\"\")\n           })];\n    \n           keyOfChipValues = keyOfChipValues.filter(key=>key!==addList);\n            var filtered = originalList.filter(\n               function(e) {\n                 return this.indexOf(e) < 0;\n               },\n               keyOfChipValues\n           );\n         /*   console.log(\"filtered\",filtered); */\n        \n         setlistOptions([...filtered]);\n         var el = document.getElementById('input2');\n         if(el)\n         el.remove();\n         var addedclass =document.getElementsByClassName(\"addlistOptions\");\n           if(addedclass.length>=1){\n                   for(let i = 0;i<addedclass.length;i++){\n                       addedclass[i].classList.add(\"listOptions\");\n                       addedclass[i].classList.remove(\"addlistOptions\");\n                   }\n    \n           }\n        if(addList===\"Lead Type\"){\n            console.log(\"yes its a \",addList);\n            var leadDiv = document.getElementById(\"leadtype\")\n           var d1 = document.getElementById(\"listTypeOpt\");\n           if(d1 && leadDiv){\n           leadDiv.style.display = \"block\";\n           d1.style.display = \"none\";\n    }\n    \n}\n        if(addList===\"Date\"||addList ===\"Date Range\"){\n         \n            setDateChip([...dateChip.filter(i=>i!==item)])\n    \n        }\n        \n\n    }\n\n    \n   /* Edit the chip value on Click */\n   const editChipValue = (item) =>{\n            /*  const chip = [...chipValue.filter(i=>i!==item)]; */\n      \n            let filterChipIndex;\n            item.split(\"\").forEach((element,i)=>{\n                if (element === \":\"){\n                    filterChipIndex =  i;\n                }\n            })\n           let addList= item.split(\"\").slice(0,filterChipIndex-1).join(\"\");\n         \n           let addValue= item.split(\"\").slice(filterChipIndex+2,item.length).join(\"\");\n       \n             setChipValue([...chipValue.filter(i=>i!==item)]);\n    \n            let keyOfChipValues = [...chipValue.map(item=>{\n                item.split(\"\").forEach((element,i)=>{\n                    if (element === \":\"){\n                        filterChipIndex =  i;\n                    }\n                })\n                return item.split(\"\").slice(0,filterChipIndex-1).join(\"\")\n            })];\n    \n            keyOfChipValues = keyOfChipValues.filter(key=>key!==addList);\n             var filtered = originalList.filter(\n                function(e) {\n                  return this.indexOf(e) < 0;\n                },\n                keyOfChipValues\n            );\n          /*   console.log(\"filtered\",filtered); */\n         \n          setlistOptions([...filtered]);\n          var el = document.getElementById('input2');\n          if(el)\n          el.remove();\n          var addedclass =document.getElementsByClassName(\"addlistOptions\");\n        if(addedclass.length>=1){\n                for(let i = 0;i<addedclass.length;i++){\n                    addedclass[i].classList.add(\"listOptions\");\n                    addedclass[i].classList.remove(\"addlistOptions\");\n                }\n\n        }\n          setActivateInput([true,addList,addValue]);\n          if(addList===\"Lead Type\"){\n            console.log(\"yes its a \",addList);\n            var leadDiv = document.getElementById(\"leadtype\")\n   var d1 = document.getElementById(\"listTypeOpt\");\n   if(d1 && leadDiv){\n       leadDiv.style.display = \"block\";\n       d1.style.display = \"none\";\n   }\n     \n        }\n\n        if(addList===\"Date\"||addList ===\"Date Range\"){\n            /* come back here later */\n            setDateChip([...dateChip.filter(i=>i!==item)])\n        }\n        var popup = document.getElementById('searchoptions');\n        if(popup)\n        popup.style.display = 'inline-block';\n\n   }\n\n   /* Lead Type handle To show Lead Type Based on CLick */\n   var flaglead =0;\n   const leadTypeHandle =()=>{\n        var el = document.getElementById('input2');\n        if(el)\n        el.remove(); \n        var addedclass =document.getElementsByClassName(\"addlistOptions\");\n        if(addedclass.length>=1){\n                for(let i = 0;i<addedclass.length;i++){\n                    addedclass[i].classList.add(\"listOptions\");\n                    addedclass[i].classList.remove(\"addlistOptions\");\n                }\n\n        }\n       var d1 = document.getElementById(\"listTypeOpt\");\n       console.log(d1);\n       if(d1){\n           if(flaglead===0)\n           { \n               d1.style.display=\"block\";\n               flaglead =1;\n            }\n               else{\n                   d1.style.display = \"none\"\n               flaglead =0;\n           }\n        }\n    }\n    /* Lead value to as Chip */\nconst leadToChip =(item)=>{\n    console.log(item.label);\n    let addValue = `Lead Type : ${item.label}`;\n    setChipValue([...chipValue,addValue]);\n    var leadDiv = document.getElementById(\"leadtype\")\n    var d1 = document.getElementById(\"listTypeOpt\");\n    if(d1 && leadDiv){\n        d1.style.display = \"none\";\n        leadDiv.style.display = \"none\";\n    }\n    flaglead =1;\n    }\n\n\n\n    /* Date Picker */\n\n\n   const dateHandleSelect=(ranges)=>{\n    let startDate = ranges.selection.startDate.toString().split(\"\").splice(4,11).join(\"\");\n    let endDate = ranges.selection.endDate.toString().split(\"\").splice(4,11).join(\"\")\n  let dateRange = [`Date Range : ${startDate} to ${endDate}`]\n    setDateChip([...dateRange]);\n   /*  let dtcd=document.getElementById(\"dateChip\");\n    dtcd.style.display = \"block\"; */\n    let selectionRangeNew = {\n        startDate: ranges.selection.startDate,\n        endDate:ranges.selection.endDate,\n        key:'selection',\n        disabled:false,\n        showDateDisplay: true,\n    }\n    setselectionRange(selectionRangeNew);\n    \n    /* so that there is no display of the div after setting */\n}\n \n\nconst dateHandle=()=>{\n    var dateDiv = document.getElementById(\"dateRangePicker\");\n    \n    if(dateDiv)\n    if(!dateflag)\n    {\n    setdateflag(true);\nconsole.log(dateflag)\n}\n    else{\n        \n        setdateflag(false);\n        console.log(dateflag)\n    }\n}\n\n    useEffect(() => {\n        let flag =1;     \n        // Update the document title using the browser API\n            var popup = document.getElementById('searchoptions');\n            var popupHelp =document.getElementById('searchInput');\n            var popupHelp2 = document.getElementById(\"searchWrapper\");\n            var button = document.getElementsByTagName(\"button\");\n            document.onclick = function(e){\n           \n                if(e.target.id === 'SearchBoxContainer'|| e.target === button){\n   \n                    popup.style.display = 'none';\n                   \n                }\n                if(e.target === popup || e.target=== popupHelp||e.target===popupHelp2){\n                     popup.style.display = 'inline-block';\n                  \n                }\n                if(e.target=== popupHelp||e.target===popupHelp2){\n                    if(flag ===0){\n                    flag=1;\n                    popup.style.display = 'none';\n                   \n                }else{\n                    flag=0;\n                    popup.style.display = 'inline-block';\n                   \n                }\n\n                }\n               \n            };\n/* Commented until new test passed or failed */\n       \n        if(activateInput[0]){\n            console.log(\"array of input\",activateInput[2]);\n            var d1 = document.getElementById(activateInput[1]);\n            if(d1!==null)\n            d1.insertAdjacentHTML('beforeend', '<input autocomplete = \"off\" id=\"input2\" />');\n            var d2 = document.getElementById(\"input2\");\n            if(d2)\n            {\n            d2.value = activateInput[2];\n            d2.select();\n            d2.focus();\n            d1.classList.remove(\"listOptions\");\n           d1.classList.add(\"addlistOptions\");\n        }\n            setActivateInput([false])\n        }\n        var dateDiv = document.getElementById(\"dateRangePicker\");\n        if(dateDiv)\n        if(!dateflag){\n            dateDiv.style.display = \"none\";\n        }else {\n            dateDiv.style.display = \"block\";\n        }\n\n    },[outclick,activateInput,dateflag]);\n\n    const chipstyle = {\n        listStyleType: 'none',\n        fontSize:'.8em',\n        position:'absolute',\n        top: '70.5%',\n        left:' 29.5%',\n        margin:'0',\n        padding:'0',\n        display:'flex',\n        width:'39%',\n        flexWrap:'wrap'\n    }\n    const liStyle = {\n        display:'flex',\n        paddingLeft:'1px',\n        paddingRight:'1px',\n        backgroundColor:'white',/* \n        borderRadius:'8px', */\n        margin:'1px',\n        color:' #262c5b',\n        marginLeft: '7px',\n        border: '1px solid #262c5b'\n    }\n\n\n\n    return (\n        <div id = \"SearchBoxContainer\" className=\"SearchBoxContainer\">\n            <button className = \"back\"><img src ={backArrow} alt = \"\"/>  Back</button>\n            <div id=\"searchWrapper\" className = \"SearchBoxWrapper select\">    \n            <input autoComplete=\"off\" onClick = {handleHide} onKeyDown={handleInputValue1} \n            id = \"searchInput\" placeholder=\"Filter (Type something…..)\" className=\"search\"/>\n            </div> \n            <div className=\"select2\">\n            <select className=\"btn2\">  \n                    <option>All Leads</option>\n                    <option>My Leads</option>\n                    <option>Hot Leads</option>\n                </select>\n            </div>\n            <button className = \"btn\">Search</button>\n            <ul style = {chipstyle}>\n            {chipValue.map((item,i) =>\n             <li key = {i+item}\n             style = {liStyle}><p  onClick={() => editChipValue(item)} >{item}</p>\n             <button className=\"btn1\" onClick={() => handleDeleteChip(item)}>X</button>\n             </li>)}\n                {dateChip.map((item)=>\n                    <li key  = {item} style = {liStyle}><p onClick={() => editChipValue(item)} >{item}</p>\n             <button className=\"btn1\" onClick={() => handleDeleteChip(item)}>X</button>\n             </li>\n                )}\n            </ul> \n            <button className = \"nlbtn\">New Lead +</button>\n            <button className = \"imbtn\">Import</button>\n            <button className = \"dwnbtn\"><img src ={dwnbtn} alt = \"Download\"/></button>\n            {/* List box appears only when clicking the input area */} \n            \n            <div ref={el=>outclick=el} id =\"searchoptions\" className=\"searchoptions hide\">\n            <div className = \"SavedBy\">\n            <p style = {{color:'grey'}}>Recent:</p>\n           {/*  {savedBy.map((item,i) =><p className=\"SavedByValues\" key = {i+item}>{item}</p>)} */}\n            </div>\n            <Element name=\"test7\" className=\"element\" id=\"containerElement\" style={{\n            position: 'relative',\n            height: '340px',\n            overflow: 'scroll',\n            marginBottom: '100px',\n            overflowX: \"hidden\",\n            \n\n          }}>\n<Element name=\"firstInsideContainer\" style={{\n              marginBottom: '20px'\n            }}>\n                \n                <div className = \"chipDisplayDiv\">\n\n                <ul className = \"chipstyle\">\n            {chipValue.map((item,i) =>\n             <li className= \"chipliststyle\"  key = {i+item}>\n             <p onClick={() => editChipValue(item)} >{item}</p> \n             <button className=\"btn1\" onClick={() => handleDeleteChip(item)}>X</button>\n             </li>)}\n             {\n                 dateChip.map((item)=>\n                    <li id=\"dateChip\" className= \"chipliststyle\" key  = \"dateChip\" ><p  onClick={() => editChipValue(item)} >{item}</p>\n                    <button className=\"btn1\" onClick={() => handleDeleteChip(item)}>X</button>\n                    </li>\n                 )\n             }\n            </ul>   \n\n                </div>\n          </Element>\n\n          <Element name=\"secondInsideContainer\" style={{\n              marginBottom: '20px'\n            }}>\n            <ul id = \"popup\" style = {{listStyleType:\"none\",display:\"inline-block\",width:\"95%\"}}>\n            {\n            listOptions.map((item)=><li onKeyDown={(e)=>handleInputValue2(e,item)} id ={item} className = \"listOptions\" key={item} >\n                <p onClick={() => handleItemOptions(item)}>{item}</p>\n                {/*  list input Button removed until further nortice */}\n               {/*  <button id = {item+1} className = \"input2btn hide\" onClick ={handleOptionValue}><img className = \"tickMark\"src={tickMark} alt =\"ok\"/></button> */}\n               \n                </li>)\n            }\n           {/* <li onClick={leadTypeHandle} id = \"leadtype\" className= \"listOptions\"><p>Lead Type ▼ </p></li> \n           <div id = \"listTypeOpt\" className = \" hide\">\n           { leadType.map(item=><p onClick={()=>leadToChip(item.label)} key={item.label} className = \"listOptions2\" >{item.label}</p>)}\n           </div> */}\n           <li onClick={leadTypeHandle} id = \"leadtype\" className= \"listOptions\" ><p>Lead Type ▼ </p>\n           </li>\n         \n           <li onClick = {dateHandle} id = \"dateType\" className = \"listOptions\"><p>Date Range ▼</p></li>\n           <div id = \"dateRangePicker\">\n           <DateRangePicker \n\t\t\t\tranges={[selectionRange]}\n                onChange={dateHandleSelect}\n                showDateDisplay={true}\n\t\t\t/>\n           </div>\n           \n            </ul>   \n              \n          </Element>\n              \n          </Element>\n          <div id = \"listTypeOpt\" className = \"listTypeOpt hide\">\n           <Select onChange = {leadToChip} options={options} />\n           </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SearchBox\n","import React from 'react'\n\nfunction UserModal(props) {\n    console.log(\"modal\",props.data)\n    return (\n        <div style = {{width:\"30%\",height:\"auto\",border:\"1px solid blue\"}}>\n        \n        <div> \n        <h3>{props.data.name}  \n        </h3>\n        <p style = {{fontWeight:\"bolder\"}}>Address</p>\n        <p>{props.data.address.street}  \n        </p>\n        <p>{props.data.address.suite}  \n        </p>\n        <p>{props.data.address.city}  \n        </p>\n        </div>\n          <button className=\"btn3\" onClick = {()=>props.handleModal(false)}>close</button> \n        </div>\n    )\n}\n\nexport default UserModal\n","import React, { useState,useEffect} from 'react';\n\nimport {Table} from 'react-bootstrap';\nimport UserModal from './modal/modal.component';\nimport \"./table.css\";\n\nfunction DataT() {\n\n\n  \n    \n    \n    const handleDataClick=(data)=>{\n        setclickData(data);\n        handleModal(true)\n        console.log(\"function clicked\",data)\n\n        }\n        const handleModal=(val)=>{\n           setuseModal(val);\n    \n            }\n\n    \nconst [data, setdata] = useState([]);\nconst [clickData, setclickData] = useState([]);\nconst [useModal, setuseModal] = useState(false);\n\nasync function fetchUrl(){\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n    const json = await response.json();\n    console.log(json);\n    setdata(json);\n}\n\n        useEffect(() => {\n            fetchUrl();\n        },[])\n        \n    return (\n        <div style = {{display:\"flex\",transition:\"0.5s\"}}>\n  {useModal?<UserModal handleModal= {handleModal} data = {clickData}/>:null}\n\n\n      \n        <Table style={{transition:\"0.5s\" }} striped bordered size=\"sm\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>First</th>\n            <th>Last</th>\n            <th>Handle</th>\n          </tr>\n        </thead>\n        <tbody>\n         {data.map((item,i)=>{\n           return(<tr key ={i}>\n            <td key={i+\"i\"}>{item.id}</td>\n            <td key={i+\"ii\"} style={{cursor:\"pointer\"}} onClick = {()=>handleDataClick(item)}>{item.name}</td>\n            <td key={i+\"iii\"}>{item.username}</td>\n            <td key={i +\"iv\"}>{item.email}</td>\n            </tr> )    \n         }) }\n          \n        </tbody>\n      </Table>\n      \n        </div>\n    )\n}\n\nexport default DataT\n","import React from 'react';\nimport './App.css';\nimport Navbar from './components/navbar/Navbar';\nimport SearchBox from './components/searchBox/SearchBox';\nimport DataT from './components/dataTable/dataTable.component.jsx';\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n    <div>\n    <Navbar/>\n    </div>\n    <SearchBox/>\n    <DataT/>\n     <footer>\n      <p>Under Construction</p>\n     </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n<App />\n\n\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/noun_Download_2120379.19bd94ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/Mask Group 3.d7189b57.svg\";"],"sourceRoot":""}